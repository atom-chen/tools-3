// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AllConfig.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "AllConfig.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* AllConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AllConfig_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_AllConfig_2eproto() {
  protobuf_AddDesc_AllConfig_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "AllConfig.proto");
  GOOGLE_CHECK(file != NULL);
  AllConfig_descriptor_ = file->message_type(0);
  static const int AllConfig_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllConfig, activity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllConfig, minecardcount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllConfig, minecoin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllConfig, dailyevent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllConfig, mineinitdata_),
  };
  AllConfig_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AllConfig_descriptor_,
      AllConfig::default_instance_,
      AllConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllConfig, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllConfig, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AllConfig));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_AllConfig_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AllConfig_descriptor_, &AllConfig::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_AllConfig_2eproto() {
  delete AllConfig::default_instance_;
  delete AllConfig_reflection_;
}

void protobuf_AddDesc_AllConfig_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_ActivityConfig_2eproto();
  ::protobuf_AddDesc_MineCardCountConfig_2eproto();
  ::protobuf_AddDesc_MineCoinConfig_2eproto();
  ::protobuf_AddDesc_DailyEventConfig_2eproto();
  ::protobuf_AddDesc_MineInitDataConfig_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017AllConfig.proto\032\024ActivityConfig.proto\032"
    "\031MineCardCountConfig.proto\032\024MineCoinConf"
    "ig.proto\032\026DailyEventConfig.proto\032\030MineIn"
    "itDataConfig.proto\"\320\001\n\tAllConfig\022!\n\010acti"
    "vity\030\001 \003(\0132\017.ActivityConfig\022+\n\rminecardc"
    "ount\030\002 \003(\0132\024.MineCardCountConfig\022!\n\010mine"
    "coin\030\003 \003(\0132\017.MineCoinConfig\022%\n\ndailyeven"
    "t\030\004 \003(\0132\021.DailyEventConfig\022)\n\014mineinitda"
    "ta\030\005 \003(\0132\023.MineInitDataConfig", 349);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "AllConfig.proto", &protobuf_RegisterTypes);
  AllConfig::default_instance_ = new AllConfig();
  AllConfig::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_AllConfig_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_AllConfig_2eproto {
  StaticDescriptorInitializer_AllConfig_2eproto() {
    protobuf_AddDesc_AllConfig_2eproto();
  }
} static_descriptor_initializer_AllConfig_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int AllConfig::kActivityFieldNumber;
const int AllConfig::kMinecardcountFieldNumber;
const int AllConfig::kMinecoinFieldNumber;
const int AllConfig::kDailyeventFieldNumber;
const int AllConfig::kMineinitdataFieldNumber;
#endif  // !_MSC_VER

AllConfig::AllConfig()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AllConfig::InitAsDefaultInstance() {
}

AllConfig::AllConfig(const AllConfig& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AllConfig::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AllConfig::~AllConfig() {
  SharedDtor();
}

void AllConfig::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AllConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AllConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AllConfig_descriptor_;
}

const AllConfig& AllConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AllConfig_2eproto();
  return *default_instance_;
}

AllConfig* AllConfig::default_instance_ = NULL;

AllConfig* AllConfig::New() const {
  return new AllConfig;
}

void AllConfig::Clear() {
  activity_.Clear();
  minecardcount_.Clear();
  minecoin_.Clear();
  dailyevent_.Clear();
  mineinitdata_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AllConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ActivityConfig activity = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_activity:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_activity()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_activity;
        if (input->ExpectTag(18)) goto parse_minecardcount;
        break;
      }

      // repeated .MineCardCountConfig minecardcount = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_minecardcount:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_minecardcount()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_minecardcount;
        if (input->ExpectTag(26)) goto parse_minecoin;
        break;
      }

      // repeated .MineCoinConfig minecoin = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_minecoin:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_minecoin()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_minecoin;
        if (input->ExpectTag(34)) goto parse_dailyevent;
        break;
      }

      // repeated .DailyEventConfig dailyevent = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_dailyevent:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_dailyevent()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_dailyevent;
        if (input->ExpectTag(42)) goto parse_mineinitdata;
        break;
      }

      // repeated .MineInitDataConfig mineinitdata = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_mineinitdata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_mineinitdata()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_mineinitdata;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void AllConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ActivityConfig activity = 1;
  for (int i = 0; i < this->activity_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->activity(i), output);
  }

  // repeated .MineCardCountConfig minecardcount = 2;
  for (int i = 0; i < this->minecardcount_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->minecardcount(i), output);
  }

  // repeated .MineCoinConfig minecoin = 3;
  for (int i = 0; i < this->minecoin_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->minecoin(i), output);
  }

  // repeated .DailyEventConfig dailyevent = 4;
  for (int i = 0; i < this->dailyevent_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->dailyevent(i), output);
  }

  // repeated .MineInitDataConfig mineinitdata = 5;
  for (int i = 0; i < this->mineinitdata_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->mineinitdata(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AllConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ActivityConfig activity = 1;
  for (int i = 0; i < this->activity_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->activity(i), target);
  }

  // repeated .MineCardCountConfig minecardcount = 2;
  for (int i = 0; i < this->minecardcount_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->minecardcount(i), target);
  }

  // repeated .MineCoinConfig minecoin = 3;
  for (int i = 0; i < this->minecoin_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->minecoin(i), target);
  }

  // repeated .DailyEventConfig dailyevent = 4;
  for (int i = 0; i < this->dailyevent_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->dailyevent(i), target);
  }

  // repeated .MineInitDataConfig mineinitdata = 5;
  for (int i = 0; i < this->mineinitdata_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->mineinitdata(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AllConfig::ByteSize() const {
  int total_size = 0;

  // repeated .ActivityConfig activity = 1;
  total_size += 1 * this->activity_size();
  for (int i = 0; i < this->activity_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->activity(i));
  }

  // repeated .MineCardCountConfig minecardcount = 2;
  total_size += 1 * this->minecardcount_size();
  for (int i = 0; i < this->minecardcount_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->minecardcount(i));
  }

  // repeated .MineCoinConfig minecoin = 3;
  total_size += 1 * this->minecoin_size();
  for (int i = 0; i < this->minecoin_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->minecoin(i));
  }

  // repeated .DailyEventConfig dailyevent = 4;
  total_size += 1 * this->dailyevent_size();
  for (int i = 0; i < this->dailyevent_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->dailyevent(i));
  }

  // repeated .MineInitDataConfig mineinitdata = 5;
  total_size += 1 * this->mineinitdata_size();
  for (int i = 0; i < this->mineinitdata_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->mineinitdata(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AllConfig::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AllConfig* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AllConfig*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AllConfig::MergeFrom(const AllConfig& from) {
  GOOGLE_CHECK_NE(&from, this);
  activity_.MergeFrom(from.activity_);
  minecardcount_.MergeFrom(from.minecardcount_);
  minecoin_.MergeFrom(from.minecoin_);
  dailyevent_.MergeFrom(from.dailyevent_);
  mineinitdata_.MergeFrom(from.mineinitdata_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AllConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AllConfig::CopyFrom(const AllConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AllConfig::IsInitialized() const {

  for (int i = 0; i < activity_size(); i++) {
    if (!this->activity(i).IsInitialized()) return false;
  }
  for (int i = 0; i < minecardcount_size(); i++) {
    if (!this->minecardcount(i).IsInitialized()) return false;
  }
  for (int i = 0; i < minecoin_size(); i++) {
    if (!this->minecoin(i).IsInitialized()) return false;
  }
  for (int i = 0; i < dailyevent_size(); i++) {
    if (!this->dailyevent(i).IsInitialized()) return false;
  }
  for (int i = 0; i < mineinitdata_size(); i++) {
    if (!this->mineinitdata(i).IsInitialized()) return false;
  }
  return true;
}

void AllConfig::Swap(AllConfig* other) {
  if (other != this) {
    activity_.Swap(&other->activity_);
    minecardcount_.Swap(&other->minecardcount_);
    minecoin_.Swap(&other->minecoin_);
    dailyevent_.Swap(&other->dailyevent_);
    mineinitdata_.Swap(&other->mineinitdata_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AllConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AllConfig_descriptor_;
  metadata.reflection = AllConfig_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
